), colData = anno)
CellQC <- perCellQCMetrics(mca)
FeatQC <- perFeatureQCMetrics(mca)
colData(mca) <- cbind(colData(mca), CellQC)
rowData(mca) <- cbind(rowData(mca), FeatQC)
mca <- mca[, mca$stage != "spz"]
mca <- mca[, mca$stage != "mozSpz"]
mca <- mca[, mca$stage != "ffeSpz"]
tab <- as.data.frame(colData(mca))
ggplot(tab, aes(x=detected, fill = stage)) + geom_histogram(binwidth = 10) + facet_grid(stage~., scales="free") + geom_vline(xintercept = 40, col ="red")
mca$group <- rep("spz", length(mca$sample_id))
mca[, which(mca$stage=="gam")]$group <- "gam"
mca[, which(mca$stage=="ook")]$group <- "ook"
tab <- as.data.frame(colData(mca))
ggplot(tab, aes(x=detected, fill = group)) + geom_histogram(binwidth = 30) + facet_grid(group~., scales="free") +geom_vline(xintercept = 40, col ="red")
tab <- as.data.frame(colData(mca))
ggplot(tab, aes(x=sum, fill = group)) + geom_histogram(bins=100) + facet_grid(group~., scales="free") +geom_vline(xintercept = 5000, col ="red")
mca <- mca[, mca$num_cells=="SC"]
mcasmall <- mca[,colData(mca)$group == "spz"]
mcamedium <- mca[, colData(mca)$group == "ook" ]
mcalarge <- mca[, colData(mca)$group == "gam" ]
#QC of gams
filter_by_total_counts <- (mcalarge$sum > 10000)
table(filter_by_total_counts)
# Filter cells with low numbers of features detected
filter_by_expr_features <- (mcalarge$detected > 500)
table(filter_by_expr_features)
mcalarge$use <- (filter_by_expr_features & filter_by_total_counts)
table(mcalarge$use)
#QC of ookinetes
# Filter cells with low counts
filter_by_total_counts <- (mcamedium$sum > 5000)
table(filter_by_total_counts)
# Filter cells with low numbers of features detected
filter_by_expr_features <- (mcamedium$detected > 400)
table(filter_by_expr_features)
mcamedium$use <- (filter_by_expr_features & filter_by_total_counts)
table(mcamedium$use)
##QC of Spz
# Filter cells with low counts
filter_by_total_counts <- (mcasmall$sum > 5000)
table(filter_by_total_counts)
# Filter cells with low numbers of features detected
filter_by_expr_features <- (mcasmall$detected > 40)
table(filter_by_expr_features)
mcasmall$use <- (filter_by_expr_features & filter_by_total_counts)
table(mcasmall$use)
mca <- cbind(mcasmall, mcamedium)
mca <- cbind(mca, mcalarge)
table(mca$use, mca$group)
#make QCed SingleCellExperiment
mca.qc.cells <- mca[ , colData(mca)$use]
meds <- tapply(colData(mca.qc.cells)$detected, colData(mca.qc.cells)$group, median)
meds
# Gene filtering
filter_genes <- apply(counts(mca[ , colData(mca)$use]), 1, function(x) length(x[x >= 1]) >= 2)
table(filter_genes)
rowData(mca)$use <- filter_genes
dim(mca[rowData(mca)$use, colData(mca)$use])
assay(mca, "logcounts_raw") <- log2(counts(mca) + 1)
reducedDim(mca) <- NULL
mca.qc <- mca[rowData(mca)$use, colData(mca)$use]
plot_UMAP_stage_global_cluster <- function(mca.qc.stage, ntop, n_neighbors, min_dist, spread){
clusters <- quickCluster(mca.qc.stage)
mca.qc.stage <- computeSumFactors(mca.qc.stage, clusters=clusters, min.mean=1)
summary(sizeFactors(mca.qc.stage))
mca.qc.stage <- logNormCounts(mca.qc.stage, log=FALSE, size_factors=sizeFactors(mca.qc.stage))
mca.qc.stage <- logNormCounts(mca.qc.stage, log=TRUE, size_factors=sizeFactors(mca.qc.stage))
cpm(mca.qc.stage) <- calculateCPM(mca.qc.stage) #divide each column by its total and multiple by 1 million
assay(mca.qc.stage, "log_cpm") <- log2(calculateCPM(mca.qc.stage) + 1)
set.seed(666)
mca.qc.stage <- runUMAP(mca.qc.stage, ntop=ntop, n_neighbors = n_neighbors, min_dist=min_dist, spread =spread, n_threads = 4)
#mca.qc.stage <- mca.qc.stage[,!is.na(mca.qc.stage$global_seurat_clusters)] #remove NA
mca.qc.stage$global_seurat_clusters = as.factor(mca.qc.stage$global_seurat_clusters) # as.factor
#environment = environment()
p <- plotUMAP(mca.qc.stage, colour_by = "global_seurat_clusters")
all2 <- p$data
colnames(all2) <- c("UMAP1", "UMAP2", "global_seurat_clusters")
colors = c("0" = "red", "1" = "cyan3", "5"="purple", "NA" = "red")
plot1 <- ggplot(all2, aes(UMAP1, UMAP2)) +
geom_point(aes(colour = global_seurat_clusters), size=1) + theme_bw() +
scale_colour_manual(values = colors, breaks = c("0", "1", "NA"), labels = c("0", "1", "NA")) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
return(plot1)
}
plot_UMAP_stage_spz_cluster <- function(mca.qc.stage, ntop, n_neighbors, min_dist, spread){
clusters <- quickCluster(mca.qc.stage)
mca.qc.stage <- computeSumFactors(mca.qc.stage, clusters=clusters, min.mean=1)
summary(sizeFactors(mca.qc.stage))
mca.qc.stage <- logNormCounts(mca.qc.stage, log=FALSE, size_factors=sizeFactors(mca.qc.stage))
mca.qc.stage <- logNormCounts(mca.qc.stage, log=TRUE, size_factors=sizeFactors(mca.qc.stage))
cpm(mca.qc.stage) <- calculateCPM(mca.qc.stage) #divide each column by its total and multiple by 1 million
assay(mca.qc.stage, "log_cpm") <- log2(calculateCPM(mca.qc.stage) + 1)
set.seed(666)
mca.qc.stage <- runUMAP(mca.qc.stage, ntop=ntop, n_neighbors = n_neighbors, min_dist=min_dist, spread =spread, n_threads = 4)
#mca.qc.stage <- mca.qc.stage[,!is.na(mca.qc.stage$spz_seurat_clusters)] #remove NA
mca.qc.stage$spz_seurat_clusters = as.factor(mca.qc.stage$spz_seurat_clusters) # as.factor
#environment = environment()
p <- plotUMAP(mca.qc.stage, colour_by = "spz_seurat_clusters")
all2 <- p$data
colnames(all2) <- c("UMAP1", "UMAP2", "spz_seurat_clusters")
colors = c("0" = "orange", "1" = "#00B49A","2"="#006592", "NA" = "red")
plot1 <- ggplot(all2, aes(UMAP1, UMAP2)) +
geom_point(aes(colour = spz_seurat_clusters), size=1) + theme_bw() +
scale_colour_manual(values = colors, breaks = c("0", "1","2", "NA"), labels = c("0", "1","2", "NA")) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
return(plot1)
}
UMAP_within_stage <- function(target_stage, ntop, n_neighbors, min_dist, spread){
mca.qc.stage <- mca.qc[,colData(mca.qc)$stage == target_stage] #subset
cell_num <- length(mca.qc.stage@colData$stage) #show cell number for current stage
p <- plot_UMAP_stage_spz_cluster(mca.qc.stage, ntop, n_neighbors, min_dist, spread) #UMAP
p <- p + ggtitle(paste0(target_stage," (",cell_num," cells)")) + labs(caption = paste0("ntop=",ntop,", n_neighbors = ",n_neighbors,", min_dist=",min_dist,", spread =",spread))
print(p)
ggsave(paste0(target_stage,"_UMAP_ntop",ntop,"_nNei",n_neighbors, "_minDis", min_dist,"_spre",spread, ".jpg"), device="jpg")
return(p)
}
UMAP_grid_search <- function(stage)
{
# sgSpz_plot <- UMAP_within_stage(stage, ntop=250, n_neighbors=5, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=200, n_neighbors=5, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=100, n_neighbors=5, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=50, n_neighbors=5, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=25, n_neighbors=5, min_dist=1, spread=3)
#
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=2, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=3, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=4, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=6, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=7, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=8, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=9, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=10, min_dist=1, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.8, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.6, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.5, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.4, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.3, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.2, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.1, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.05, spread=3)
sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=0.02, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=1)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=2)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=3)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=4)
# sgSpz_plot <- UMAP_within_stage(stage, ntop=150, n_neighbors=5, min_dist=1, spread=5)
}
UMAP_grid_search("sgSpz")
UMAP_grid_search("hlSpz")
UMAP_grid_search("injSpz")
UMAP_grid_search("ooSpz")
#UMAP_grid_search("actSpz")
UMAP_within_stage <- function(target_stage, ntop, n_neighbors, min_dist, spread){
mca.qc.stage <- mca.qc[,colData(mca.qc)$stage == target_stage] #subset
cell_num <- length(mca.qc.stage@colData$stage) #show cell number for current stage
p <- plot_UMAP_stage_global_cluster(mca.qc.stage, ntop, n_neighbors, min_dist, spread) #UMAP
p <- p + ggtitle(paste0(target_stage," (",cell_num," cells)")) + labs(caption = paste0("ntop=",ntop,", n_neighbors = ",n_neighbors,", min_dist=",min_dist,", spread =",spread))
print(p)
ggsave(paste0(target_stage,"_UMAP_ntop",ntop,"_nNei",n_neighbors, "_minDis", min_dist,"_spre",spread, ".jpg"), device="jpg")
return(p)
}
sgSpz_plot <- UMAP_within_stage("actSpz", ntop=150, n_neighbors=5, min_dist=1, spread=3)
session_info()
#highlight gene in UMAP
target_stage="hlSpz"
mca.qc.stage <- mca.qc[,colData(mca.qc)$stage == target_stage] #subset
mca.qc.stage$xfilename
mca.qc.stage
FeaturePlot(p.combined, features = c("PF3D7_0100100.1", "PF3D7_0100300.1"), min.cutoff = "q9",
reduction = "umap")
BiocManager::install("Seurat")
BiocManager::install("scmap")
library(scmap)
library(Seurat)
FeaturePlot(p.combined, features = c("PF3D7_0100100.1", "PF3D7_0100300.1"), min.cutoff = "q9",
reduction = "umap")
FeaturePlot(mca.qc.stage, features = c("PF3D7_0100100.1", "PF3D7_0100300.1"), min.cutoff = "q9",
reduction = "umap")
DefaultAssay(mca.qc.stage) <- "integrated"
IntegrateData
?IntegrateData(
)
type(mca.qc.stage)
class(mca.qc.stage)
mca.qc.stage
mca.qc.stage.seurat <- as.Seurat(mca.qc.stage, counts = "counts", data = "logcounts")
<- as.Seurat(mca.qc.stage, counts = "counts", data = "logcounts")
mca.qc.stage.seurat
FeaturePlot(mca.qc.stage.seurat, features = c("PF3D7-1023100.1", "PF3D7_1332200.1"), min.cutoff = "q9",
reduction = "umap")
mca.qc.stage.seurat <- runUMAP(mca.qc.stage, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
FeaturePlot(mca.qc.stage.seurat, features = c("PF3D7-1023100.1", "PF3D7_1332200.1"), min.cutoff = "q9",
reduction = "umap")
mca.qc.stage.seurat
FeaturePlot(mca.qc.stage.seurat, features = c("PF3D7_1023100.1", "PF3D7_1332200.1"), min.cutoff = "q9",
reduction = "umap")
UseMethod
?UseMethod
#highlight gene in UMAP
target_stage="hlSpz"
mca.qc.stage <- mca.qc[,colData(mca.qc)$stage == target_stage] #subset
mca.qc.stage.seurat <- as.Seurat(mca.qc.stage, counts = "counts", data = "logcounts")
mca.qc.stage.seurat <- runUMAP(mca.qc.stage.seurat, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
mca.qc.stage.seurat
mca.qc.stage.seurat@meta.data
class(mca.qc.stage)
class(mca.qc.stage.seurat)
# download from hemberg lab
# https://scrnaseq-public-datasets.s3.amazonaws.com/scater-objects/manno_human.rds
manno <- readRDS(file = "https://scrnaseq-public-datasets.s3.amazonaws.com/scater-objects/manno_human.rds")
Idents()
?Idents()
Idents(mca.qc.stage.seurat)
?FeaturePlot
FeaturePlot(mca.qc.stage.seurat, features = c("PF3D7_1023100.1", "PF3D7_1332200.1"), min.cutoff = "q9",
reduction = "umap")
mca.qc.stage.seurat <- runUMAP(mca.qc.stage.seurat, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
?runUMAP
mca.qc.stage.seurat <- RunUMAP::runUMAP(mca.qc.stage.seurat, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
mca.qc.stage.seurat <- Seruat::runUMAP(mca.qc.stage.seurat, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
mca.qc.stage.seurat <- Seurat::runUMAP(mca.qc.stage.seurat, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
mca.qc.stage.seurat <- Seurat::RunUMAP(mca.qc.stage.seurat, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
mca.qc.stage.seurat <- Seurat::RunUMAP(mca.qc.stage.seurat, max.dim=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
mca.qc.stage.seurat <- Seurat::RunUMAP(mca.qc.stage.seurat, dims.use=1:150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
mca.qc.stage.seurat <- Seurat::RunUMAP(mca.qc.stage.seurat, dims.use=1:150, n_neighbors = 5, min_dist=1)
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims.use=1:150, n_neighbors = 5, min_dist=1)
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims.use=1:15, n_neighbors = 5, min_dist=1)
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims.use=1:150)
,
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims.use=1:150, n_neighbors = 5, min_dist=1)
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims=1:150, n_neighbors = 5, min_dist=1)
?RunUMAP
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims=1:150, n.neighbors = 5, min.dist=1, spread=3)
mca.qc.stage.seurat <- Seurat::RunPCA(object = mca.qc.stage.seurat,  npcs = 150, verbose = FALSE)
?FindVariableFeatures()
mca.qc.stage.seurat <- FindVariableFeatures(object = mca.qc.stage.seurat)
mca.qc.stage.seurat <- Seurat::RunPCA(object = mca.qc.stage.seurat,  npcs = 150, verbose = FALSE)
mca.qc.stage.seurat <- ScaleData(object = mca.qc.stage.seurat)
mca.qc.stage.seurat <- Seurat::RunPCA(object = mca.qc.stage.seurat,  npcs = 150, verbose = FALSE)
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims=1:150, n.neighbors = 5, min.dist=1, spread=3)
DimPlot(object = mca.qc.stage.seurat, reduction = "umap")
DimPlot(object = mca.qc.stage.seurat, reduction = "umap")
#highlight gene in UMAP
target_stage="hlSpz"
mca.qc.stage <- mca.qc[,colData(mca.qc)$stage == target_stage] #subset
mca.qc.stage.seurat <- as.Seurat(mca.qc.stage, counts = "counts", data = "logcounts")
mca.qc.stage.seurat <- FindVariableFeatures(object = mca.qc.stage.seurat)
mca.qc.stage.seurat <- ScaleData(object = mca.qc.stage.seurat)
mca.qc.stage.seurat <- Seurat::RunPCA(object = mca.qc.stage.seurat, verbose = FALSE)
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims=1:150, n.neighbors = 5, min.dist=1, spread=3)
mca.qc.stage.seurat <- Seurat::RunPCA(object = mca.qc.stage.seurat,  npcs = 150, verbose = FALSE)
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims=1:150, n.neighbors = 5, min.dist=1, spread=3)
DimPlot(object = mca.qc.stage.seurat, reduction = "umap")
DimPlot(object = mca.qc.stage.seurat, reduction = "umap")
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims=1:150, n.neighbors = 5, min.dist=0.5, spread=3)
DimPlot(object = mca.qc.stage.seurat, reduction = "umap")
DimPlot(object = mca.qc.stage.seurat, reduction = "umap")
mca.qc.stage.seurat <- Seurat::RunUMAP(object= mca.qc.stage.seurat, dims=1:150, n.neighbors = 5, min.dist=0.1, spread=3)
DimPlot(object = mca.qc.stage.seurat, reduction = "umap")
target_stage="hlSpz"
mca.qc.stage <- mca.qc[,colData(mca.qc)$stage == target_stage] #subset
clusters <- quickCluster(mca.qc.stage)
mca.qc.stage <- computeSumFactors(mca.qc.stage, clusters=clusters, min.mean=1)
summary(sizeFactors(mca.qc.stage))
mca.qc.stage <- logNormCounts(mca.qc.stage, log=FALSE, size_factors=sizeFactors(mca.qc.stage))
mca.qc.stage <- logNormCounts(mca.qc.stage, log=TRUE, size_factors=sizeFactors(mca.qc.stage))
cpm(mca.qc.stage) <- calculateCPM(mca.qc.stage) #divide each column by its total and multiple by 1 million
assay(mca.qc.stage, "log_cpm") <- log2(calculateCPM(mca.qc.stage) + 1)
set.seed(666)
mca.qc.stage <- runUMAP(mca.qc.stage, ntop=150, n_neighbors = 5, min_dist=1, spread =3, n_threads = 4)
plotReducedDim
?plotReducedDim
plotReducedDim(mca.qc.stage, dimred="umap")
mca.qc.stage
plotReducedDim(mca.qc.stage, dimred="UMAP")
plotReducedDim(mca.qc.stage, dimred="UMAP")
plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = "PF3D7_1023100.1")
plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = "PF3D7_1023100.1")
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = "PF3D7_1332200")
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = "PF3D7_1332200.1")
class(p)
gene2plot = "PF3D7_1332200.1"
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot)
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_1332200.1"
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_1332200.1"
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_1332200.1"
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_1023100.1"
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_1211000.1"
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_0107300.1"
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_1129100.1" #PV1
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_1218000.1" #TRAMP
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_0408600.1" #SIAP1
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_0404900.1" #P41
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_0928900.1" #GK
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
gene2plot = "PF3D7_1442600.1" #TREP
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
gene2plot = "PF3D7_0928900.2" #GK
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
gene2plot = "PF3D7_0928900.1" #GK
gene2plot = "PF3D7_1409900.1" #CDS
p <- plotReducedDim(mca.qc.stage, dimred="UMAP", colour_by = gene2plot) +
ggtitle(paste0(target_stage," ",gene2plot))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.title = element_text(size = 22,hjust = 0.5),
plot.caption = element_text(size = 12))
print(p)
ggsave(paste0(target_stage,"_",gene2plot,".jpg"), device="jpg")
library(spatstat)
?quadrat.test
# load required libraries
library( data.table )
library( DESeq2 )
library( RColorBrewer )
library( gplots )
library( ggplot2 )
library( limma )
library( genefilter )
library( DESeq2 )
library( ggplot2 )
library( biomaRt )
library( calibrate )
library(EnhancedVolcano)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biomaRt")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
shiny::runApp('C:/OneDrive_HSPH/OneDrive - Harvard University/research/Flam lab/RNAseq/201905-201808/120analysis/nodsEcR/Shiny_RNAseq_v3.1/ShinyEcRNAseqEXPR')
runApp('C:/OneDrive_HSPH/OneDrive - Harvard University/research/Flam lab/RNAseq/201905-201808/120analysis/nodsEcR/Shiny_RNAseq_v3.1/ShinyEcRNAseqEXPR')
